byteforge-frontend/
├── .eslintignore
├── .eslintrc.json
├── .gitattributes
├── .gitignore
├── .npmrc
├── .vite/
│   ├── deps/
│   │   ├── package.json
│   │   ├── _metadata.json
├── favicon.ico
├── index.html
├── LICENSE
├── package-lock.json
├── package.json
├── postcss.config.js
├── public/
│   ├── background-black.svg
│   ├── ByteForge-logo.jpg
│   ├── vite.svg
├── README.md
├── src/
│   ├── App.tsx
│   ├── assets/
│   │   ├── img/
│   │   │   ├── background-black.svg
│   ├── components/
│   │   ├── icons.tsx
│   │   ├── navbar.tsx
│   │   ├── primitives.ts
│   │   ├── theme-switch.tsx
│   ├── config/
│   │   ├── site.ts
│   ├── layouts/
│   │   ├── default.tsx
│   ├── main.tsx
│   ├── pages/
│   │   ├── about.tsx
│   │   ├── blog.tsx
│   │   ├── docs.tsx
│   │   ├── features.tsx
│   │   ├── index.tsx
│   │   ├── topics.tsx
│   ├── provider.tsx
│   ├── styles/
│   │   ├── globals.css
│   ├── types/
│   │   ├── index.ts
│   ├── vite-env.d.ts
├── structure.txt
├── tailwind.config.js
├── tsconfig.json
├── tsconfig.node.json
├── vercel.json
├── vite.config.ts



.eslintignore:

.now/*
*.css
.changeset
dist
esm/*
public/*
tests/*
scripts/*
*.config.js
.DS_Store
node_modules
coverage
.next
build
!.commitlintrc.cjs
!.lintstagedrc.cjs
!jest.config.js
!plopfile.js
!react-shim.js
!tsup.config.ts


.eslintrc.json:

{
  "$schema": "https://json.schemastore.org/eslintrc.json",
  "env": {
    "browser": false,
    "es2021": true,
    "node": true
  },
  "extends": [
    "plugin:react/recommended",
    "plugin:prettier/recommended",
    "plugin:react-hooks/recommended",
    "plugin:jsx-a11y/recommended"
  ],
  "plugins": ["react", "unused-imports", "import", "@typescript-eslint", "jsx-a11y", "prettier"],
  "parser": "@typescript-eslint/parser",
  "parserOptions": {
    "ecmaFeatures": {
      "jsx": true
    },
    "ecmaVersion": 12,
    "sourceType": "module"
  },
  "settings": {
    "react": {
      "version": "detect"
    }
  },
  "rules": {
    "no-console": "warn",
    "react/prop-types": "off",
    "react/jsx-uses-react": "off",
    "react/react-in-jsx-scope": "off",
    "react-hooks/exhaustive-deps": "off",
    "jsx-a11y/click-events-have-key-events": "warn",
    "jsx-a11y/interactive-supports-focus": "warn",
    "prettier/prettier": "warn",
    "no-unused-vars": "off",
    "unused-imports/no-unused-vars": "off",
    "unused-imports/no-unused-imports": "warn",
    "@typescript-eslint/no-unused-vars": [
      "warn",
      {
        "args": "after-used",
        "ignoreRestSiblings": false,
        "argsIgnorePattern": "^_.*?$"
      }
    ],
    "import/order": [
      "warn",
      {
        "groups": [
          "type",
          "builtin",
          "object",
          "external",
          "internal",
          "parent",
          "sibling",
          "index"
        ],
        "pathGroups": [
          {
            "pattern": "~/**",
            "group": "external",
            "position": "after"
          }
        ],
        "newlines-between": "always"
      }
    ],
    "react/self-closing-comp": "warn",
    "react/jsx-sort-props": [
      "warn",
      {
        "callbacksLast": true,
        "shorthandFirst": true,
        "noSortAlphabetically": false,
        "reservedFirst": true
      }
    ],
    "padding-line-between-statements": [
      "warn",
      {"blankLine": "always", "prev": "*", "next": "return"},
      {"blankLine": "always", "prev": ["const", "let", "var"], "next": "*"},
      {
        "blankLine": "any",
        "prev": ["const", "let", "var"],
        "next": ["const", "let", "var"]
      }
    ]
  }
}



.gitattributes:

# Auto detect text files and perform LF normalization
* text=auto



.gitignore:

# Logs
logs
*.log
npm-debug.log*
yarn-debug.log*
yarn-error.log*
pnpm-debug.log*
lerna-debug.log*

node_modules
dist
dist-ssr
*.local

# Editor directories and files
.vscode/*
!.vscode/extensions.json
.idea
.DS_Store
*.suo
*.ntvs*
*.njsproj
*.sln
*.sw?


pnpm-lock.yaml
yarn.lock
package-lock.json
bun.lockb


.npmrc:

package-lock=true


favicon.ico:

